//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("SimpleDictionary.Entities", "EDictionaryEDictValue", "EDictionary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleDictionary.Entities.EDictionary), "EDictValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleDictionary.Entities.EDictValue), true)]

#endregion

namespace SimpleDictionary.Entities
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class DataBase : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект DataBase, используя строку соединения из раздела "DataBase" файла конфигурации приложения.
        /// </summary>
        public DataBase() : base("name=DataBase", "DataBase")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта DataBase.
        /// </summary>
        public DataBase(string connectionString) : base(connectionString, "DataBase")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта DataBase.
        /// </summary>
        public DataBase(EntityConnection connection) : base(connection, "DataBase")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SimpleDictionary> SimpleDictionary
        {
            get
            {
                if ((_SimpleDictionary == null))
                {
                    _SimpleDictionary = base.CreateObjectSet<SimpleDictionary>("SimpleDictionary");
                }
                return _SimpleDictionary;
            }
        }
        private ObjectSet<SimpleDictionary> _SimpleDictionary;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SimpleDictionary. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSimpleDictionary(SimpleDictionary simpleDictionary)
        {
            base.AddObject("SimpleDictionary", simpleDictionary);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleDictionary.Entities", Name="EDictionary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EDictionary : SimpleDictionary
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта EDictionary.
        /// </summary>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="sD">Исходное значение свойства SD.</param>
        /// <param name="currentN">Исходное значение свойства CurrentN.</param>
        /// <param name="parentSD0">Исходное значение свойства ParentSD0.</param>
        public static EDictionary CreateEDictionary(global::System.String name, global::System.Boolean isDeleted, global::System.Int32 sD, global::System.Int32 currentN, global::System.Int32 parentSD0)
        {
            EDictionary eDictionary = new EDictionary();
            eDictionary.Name = name;
            eDictionary.IsDeleted = isDeleted;
            eDictionary.SD = sD;
            eDictionary.CurrentN = currentN;
            eDictionary.ParentSD0 = parentSD0;
            return eDictionary;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentSD0
        {
            get
            {
                return _ParentSD0;
            }
            set
            {
                OnParentSD0Changing(value);
                ReportPropertyChanging("ParentSD0");
                _ParentSD0 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentSD0");
                OnParentSD0Changed();
            }
        }
        private global::System.Int32 _ParentSD0;
        partial void OnParentSD0Changing(global::System.Int32 value);
        partial void OnParentSD0Changed();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleDictionary.Entities", "EDictionaryEDictValue", "EDictValue")]
        public EntityCollection<EDictValue> Values
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EDictValue>("SimpleDictionary.Entities.EDictionaryEDictValue", "EDictValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EDictValue>("SimpleDictionary.Entities.EDictionaryEDictValue", "EDictValue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleDictionary.Entities", Name="EDictValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EDictValue : SimpleDictionary
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта EDictValue.
        /// </summary>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="sD">Исходное значение свойства SD.</param>
        /// <param name="currentN">Исходное значение свойства CurrentN.</param>
        /// <param name="intValue">Исходное значение свойства IntValue.</param>
        /// <param name="floatValue">Исходное значение свойства FloatValue.</param>
        /// <param name="stringValue">Исходное значение свойства StringValue.</param>
        /// <param name="dateValue">Исходное значение свойства DateValue.</param>
        /// <param name="multiValue">Исходное значение свойства MultiValue.</param>
        /// <param name="memoValue">Исходное значение свойства MemoValue.</param>
        /// <param name="parentSD">Исходное значение свойства ParentSD.</param>
        public static EDictValue CreateEDictValue(global::System.String name, global::System.Boolean isDeleted, global::System.Int32 sD, global::System.Int32 currentN, global::System.Int32 intValue, global::System.Double floatValue, global::System.String stringValue, global::System.DateTime dateValue, global::System.String multiValue, global::System.String memoValue, global::System.Int32 parentSD)
        {
            EDictValue eDictValue = new EDictValue();
            eDictValue.Name = name;
            eDictValue.IsDeleted = isDeleted;
            eDictValue.SD = sD;
            eDictValue.CurrentN = currentN;
            eDictValue.IntValue = intValue;
            eDictValue.FloatValue = floatValue;
            eDictValue.StringValue = stringValue;
            eDictValue.DateValue = dateValue;
            eDictValue.MultiValue = multiValue;
            eDictValue.MemoValue = memoValue;
            eDictValue.ParentSD = parentSD;
            return eDictValue;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IntValue
        {
            get
            {
                return _IntValue;
            }
            set
            {
                OnIntValueChanging(value);
                ReportPropertyChanging("IntValue");
                _IntValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntValue");
                OnIntValueChanged();
            }
        }
        private global::System.Int32 _IntValue;
        partial void OnIntValueChanging(global::System.Int32 value);
        partial void OnIntValueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FloatValue
        {
            get
            {
                return _FloatValue;
            }
            set
            {
                OnFloatValueChanging(value);
                ReportPropertyChanging("FloatValue");
                _FloatValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FloatValue");
                OnFloatValueChanged();
            }
        }
        private global::System.Double _FloatValue;
        partial void OnFloatValueChanging(global::System.Double value);
        partial void OnFloatValueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StringValue
        {
            get
            {
                return _StringValue;
            }
            set
            {
                OnStringValueChanging(value);
                ReportPropertyChanging("StringValue");
                _StringValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StringValue");
                OnStringValueChanged();
            }
        }
        private global::System.String _StringValue;
        partial void OnStringValueChanging(global::System.String value);
        partial void OnStringValueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateValue
        {
            get
            {
                return _DateValue;
            }
            set
            {
                OnDateValueChanging(value);
                ReportPropertyChanging("DateValue");
                _DateValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateValue");
                OnDateValueChanged();
            }
        }
        private global::System.DateTime _DateValue;
        partial void OnDateValueChanging(global::System.DateTime value);
        partial void OnDateValueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MultiValue
        {
            get
            {
                return _MultiValue;
            }
            set
            {
                OnMultiValueChanging(value);
                ReportPropertyChanging("MultiValue");
                _MultiValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MultiValue");
                OnMultiValueChanged();
            }
        }
        private global::System.String _MultiValue;
        partial void OnMultiValueChanging(global::System.String value);
        partial void OnMultiValueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MemoValue
        {
            get
            {
                return _MemoValue;
            }
            set
            {
                OnMemoValueChanging(value);
                ReportPropertyChanging("MemoValue");
                _MemoValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MemoValue");
                OnMemoValueChanged();
            }
        }
        private global::System.String _MemoValue;
        partial void OnMemoValueChanging(global::System.String value);
        partial void OnMemoValueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentSD
        {
            get
            {
                return _ParentSD;
            }
            set
            {
                OnParentSDChanging(value);
                ReportPropertyChanging("ParentSD");
                _ParentSD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentSD");
                OnParentSDChanged();
            }
        }
        private global::System.Int32 _ParentSD;
        partial void OnParentSDChanging(global::System.Int32 value);
        partial void OnParentSDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleDictionary.Entities", "EDictionaryEDictValue", "EDictionary")]
        public EDictionary Dictionary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EDictionary>("SimpleDictionary.Entities.EDictionaryEDictValue", "EDictionary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EDictionary>("SimpleDictionary.Entities.EDictionaryEDictValue", "EDictionary").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EDictionary> DictionaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EDictionary>("SimpleDictionary.Entities.EDictionaryEDictValue", "EDictionary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EDictionary>("SimpleDictionary.Entities.EDictionaryEDictValue", "EDictionary", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleDictionary.Entities", Name="SimpleDictionary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(EDictionary))]
    [KnownTypeAttribute(typeof(EDictValue))]
    public partial class SimpleDictionary : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SimpleDictionary.
        /// </summary>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="sD">Исходное значение свойства SD.</param>
        /// <param name="currentN">Исходное значение свойства CurrentN.</param>
        public static SimpleDictionary CreateSimpleDictionary(global::System.String name, global::System.Boolean isDeleted, global::System.Int32 sD, global::System.Int32 currentN)
        {
            SimpleDictionary simpleDictionary = new SimpleDictionary();
            simpleDictionary.Name = name;
            simpleDictionary.IsDeleted = isDeleted;
            simpleDictionary.SD = sD;
            simpleDictionary.CurrentN = currentN;
            return simpleDictionary;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortN
        {
            get
            {
                return _SortN;
            }
            set
            {
                OnSortNChanging(value);
                ReportPropertyChanging("SortN");
                _SortN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortN");
                OnSortNChanged();
            }
        }
        private Nullable<global::System.Int32> _SortN;
        partial void OnSortNChanging(Nullable<global::System.Int32> value);
        partial void OnSortNChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SD
        {
            get
            {
                return _SD;
            }
            set
            {
                if (_SD != value)
                {
                    OnSDChanging(value);
                    ReportPropertyChanging("SD");
                    _SD = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SD");
                    OnSDChanged();
                }
            }
        }
        private global::System.Int32 _SD;
        partial void OnSDChanging(global::System.Int32 value);
        partial void OnSDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrentN
        {
            get
            {
                return _CurrentN;
            }
            set
            {
                OnCurrentNChanging(value);
                ReportPropertyChanging("CurrentN");
                _CurrentN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentN");
                OnCurrentNChanged();
            }
        }
        private global::System.Int32 _CurrentN;
        partial void OnCurrentNChanging(global::System.Int32 value);
        partial void OnCurrentNChanged();

        #endregion
    
    }

    #endregion
    
}
